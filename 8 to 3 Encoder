With priority 
module encoder_8_to_3_with_priority(output reg[2:0]y,input[7:0]e); 
always @(*) 
begin 
casex(e) 
8'b00000001:y=3'b000; 
8'b0000001x:y=3'b001; 
8'b000001xx:y=3'b010; 
8'b00001xxx:y=3'b011; 
8'b0001xxxx:y=3'b100; 
8'b001xxxxx:y=3'b101; 
8'b01xxxxxx:y=3'b110; 
8'b1xxxxxxx:y=3'b111; 
default:y=3'b000; 
endcase 
end 
endmodule 
//test bench 
module encoder_8_to_3_without_priority_tb; 
reg[7:0]y; 
wire[2:0]e; 
encoder_8_to_3_without_priority_tb uut(y,e); 
initial 
begin 
y=8'b00000001;#20; 
y=8'b0000001x;#20; 
y=8'b000001xx;#20; 
y=8'b00001xxx;#20; 
y=8'b0001xxxx;#20; 
y=8'b001xxxxx;#20; 
y=8'b01xxxxxx;#20; 
y=8'b1xxxxxxx;#20; 
end 
initial 
$monitor("y=%b,e=%b",y,e); 
initial 
#200 
$stop; 
endmodule 
Without priority 
module encoder_8_to_3_without_priority_bm(output reg[2:0]y,input[7:0]e); 
always @(*) 
begin 
case(e) 
8'b00000001:y=3'b000; 
8'b00000010:y=3'b001; 
8'b00000100:y=3'b010; 
8'b00001000:y=3'b011; 
8'b00010000:y=3'b100; 
8'b00100000:y=3'b101; 
8'b01000000:y=3'b110; 
8'b10000000:y=3'b111; 
default:y=3'b000; 
endcase 
end 
endmodule 
//test bench 
module encoder_8_to_3_without_priority_tb; 
reg[7:0]e; 
wire[2:0]y; 
encoder_8_to_3_without_priority_bm uut(y,e); 
initial 
begin 
y=8'b00000001;#20; 
y=8'b00000010;#20; 
y=8'b00000100;#20; 
y=8'b00001000;#20; 
y=8'b00010000;#20; 
y=8'b00100000;#20; 
y=8'b01000000;#20; 
y=8'b10000000;#20; 
end 
initial 
$monitor("y=%b,e=%b",y,e); 
initial 
#200 
$stop; 
endmodule
