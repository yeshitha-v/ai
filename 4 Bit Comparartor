module comparator4bit( 
input [3:0] a,b, 
output reg agtb,altb,aeqb 
); 
//behavioural 
always @(a,b) 
begin 
if (a>b) 
begin 
agtb=1; 
altb=0; 
aeqb=0; 
end 
else if(a<b) 
begin 
agtb=0; 
altb=1; 
aeqb=0; 
end 
else if(a==b) 
begin 
agtb=0; 
altb=0; 
aeqb=1; 
end 
else 
begin 
agtb=0; 
altb=0; 
aeqb=0; 
end 
end 
endmodule 
//testbench 
module comparator_4bit_tb; 
reg [3:0]a,b; 
wire agtb,altb,aeqb; 
comparator4bit uut(a,b,agtb,altb,aeqb); 
initial 
begin 
a=4'b0000; 
b=4'b0000; 
#2 b=4'b0010; 
#2 a=4'b1000; 
#2 b=4'b1000; 
#2 b=4'b0010; 
#2 b=4'b0101; 
#2 $stop; 
end 
initial 
begin 
end 
endmodule
